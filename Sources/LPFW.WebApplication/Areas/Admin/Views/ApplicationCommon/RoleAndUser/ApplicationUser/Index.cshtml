<!--
  普通的数据处理入口：
   1. 使用分页的数据列表；
   2. 应用局部页处理新建、编辑和明细数据的显示 UI；
   3. 使用会话框处理删除数据的确认以及删除错误以后的体视；
   4. 使用列表数据的分类导航组件
-->
@model IEnumerable<LPFW.ViewModels.EntityViewModel>
@using LPFW.HtmlHelper
@{
    var pageGroup = ViewData["PageGroup"] as LPFW.DataAccess.Tools.PagenateGroup;
    var pageParameter = ViewData["ListPageParameter"] as LPFW.DataAccess.Tools.ListPageParameter;

    // 提取控制器路径
    var controllerPath = "/" + ViewContext.RouteData.Values["area"].ToString() + "/" + ViewContext.RouteData.Values["controller"].ToString();
    // 获取 jsTree 导航树节点数据的路径
    var navigatorItemDataPath01 = controllerPath + "/DataForJsTree";
    // 获取 bootStrapTreeView 导航树节点数据的路径
    var navigatorItemDataPath02 = controllerPath + "/DataForBootStrapTreeView";
    // 缺省的列表页路径
    var defaultListUrlString =  controllerPath + "/PaginateList";

}

<div class="row sm-gutters">
    <div class="col-12 col-md-3 col-lg-3" id="navigatorPalceArea">
        <partial name="_NavigatorWithBootTreeView" />
    </div>
    <!-- 主工作区，使用列表、编辑、明细几个常规的局部页进行渲染 -->
    <div class="col-12 col-md-9 col-lg-9" id="mainWorkPlaceArea">
        <partial name="../../Views/ApplicationCommon/RoleAndUser/ApplicationUser/_List" model="@Model" />
    </div>
</div>

<!-- 一组用于留存查询、分页、导航处理等相关的中间变量，方便需要的时候提取 -->
@Html.SetListPageParameter(pageParameter)

<!-- 删除分页对象确认提交会话框 -->
<partial name="_PaginateCommonDeleteItemModal" />

<!-- 重置密码和更新用户锁定状态会话框 -->
<partial name="../../Views/ApplicationCommon/RoleAndUser/ApplicationUser/_ResetPasswordModal" />
<partial name="../../Views/ApplicationCommon/RoleAndUser/ApplicationUser/_ResetLockoutEnabledModal"/>

<!-- 上传选择器会话框 -->
<partial name="_CommonBusinessFileCollectionSelectorModal" />
<partial name="_CommonBusinessImageCollectionSelectorModal" />
<partial name="_CommonBusinessVideoSelectorModal" />
<partial name="_CommonBusinessVideoCoverSelectorModal" />
<partial name="_CommonAvatarSelectorModal" />

@section Scripts{
    <script>

        // 加载入口页时需要处理的基本控件
        $(function () {
            // 当浏览器大小变化时，重新设置相关的 div 的高度
            window.onresize = function (event) {
                resetDivHeight();
            };

            // 设置相关的 div 的高度
            resetDivHeight();

            // 设置导航树节点
            appInitialBootStrapTreeViewForPagination("navigatorTreeView", "@navigatorItemDataPath02", "@defaultListUrlString", "mainWorkPlaceArea");

            // 初始化与上传插件相关的 boot-fileinput 插件
            appInitialUpload();
        });

        /*
         * 当在页面上调用 appGotoCreateOrEditWithPartialView 方法时，通过控制器返回局部视图时调用这个方法。
         * 这个方法用于初始化 _CommonCreateOrEdit 页面的元素。
         */
        function initialGotoCreateOrEditWithPartialView() {
            appInitialBootstrapMultiselect("ApplicationRoleId");
            resetDivHeight();
        }


        /*
         * 当在页面上调用 appGotoDetailPartialView 方法时，通过控制器返回局部视图时调用这个方法。
         * 这个方法用于初始化 _CommonDetail 局部视图的元素
         */
        function initialDetailPartialView() {
            resetDivHeight();
        }

        function openResetPasswordModal(id) {
            $('#resetPasswordID').val(id);
            $('#resetPasswordModal').modal({
                show: true,
                backdrop: 'static'
            });
        }

        function resetPassword() {
            var id=$('#resetPasswordID').val();
            var userPasword=$('#userPasword').val();
            var userPaswordConfirm=$('#userPaswordConfirm').val();
            $.ajax({
                cache: false,
                type: 'get',
                async: true,
                url: '/Admin/ApplicationUser/ResetPassword/' + id+'?userPasword='+userPasword+'&userPaswordConfirm='+userPaswordConfirm,
                beforeSend: function () {
                }
            }).done(function (operationStatus) {
                if (operationStatus.isOK === true) {
                    $('#resetPasswordModal').modal('hide');
                } else {
                    document.getElementById("resetPasswordMessage").innerText = operationStatus.message;
                }
            }).fail(function () {
                alert("连接后台失败！");
            }).always(function () {
            });
        }

        function openResetLockoutEnabledModal(id,status) {
            $('#resetLockoutEnabledID').val(id);
            if (status === 'true') {
                document.getElementById("resetLockoutEnabledTitle").innerHTML = '解除锁定';
                document.getElementById("resetLockoutEnabledTip").innerHTML = '解除锁定后，所选择的用户将可以再次以原有的登录令牌进入系统，请您确认是否需要解锁。';
            } else {
                document.getElementById("resetLockoutEnabledTitle").innerHTML = '锁定用户';
                document.getElementById("resetLockoutEnabledTip").innerHTML = '执行锁定后，所选择的用户将无法使用现有的登录令牌进入系统，请您确认是否需要锁定。';
            }
            $('#resetLockoutEnabledModal').modal({
                show: true,
                backdrop: 'static'
            });
        }

        function resetLockoutEnabled(){
            var id=$('#resetLockoutEnabledID').val();
            $.ajax({
                cache: false,
                type: 'get',
                async: true,
                url: '/Admin/ApplicationUser/ResetLockoutEnabled/' + id,
                beforeSend: function () {
                }
            }).done(function (operationStatus) {
                if (operationStatus.isOK == true) {
                    if (operationStatus.operationValue == 'true') {
                        document.getElementById("lockoutEnabled_" + id).innerHTML = '<i class="fa fa-circle text-danger" aria-hidden="true"></i>';
                    } else {
                        document.getElementById("lockoutEnabled_" + id).innerHTML = '<i class="fa fa-circle text-info" aria-hidden="true"></i>';
                    }
                    $('#resetLockoutEnabledModal').modal('hide');
                } else {
                    document.getElementById("resetLockoutEnabledID").innerText = delStatus.message;
                }
            }).fail(function () {
                alert("连接后台失败！");
            }).always(function () {
            });

        }

    </script>
}